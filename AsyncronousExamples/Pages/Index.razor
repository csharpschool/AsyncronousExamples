@page "/"
@using AsyncronousExamples.Classes;
@inject Asynchronous a

<h1>Async/Await/Task</h1>

<button class="btn btn-primary" @onclick="() => animals.Clear()">Clear</button>
<button class="btn btn-primary" @onclick="async () => animals.AddRange(await a.GetDogsAync())">Get Dogs (with delay)</button>
<button class="btn btn-primary" @onclick="async () => animals.AddRange(await a.GetCatsAync())">Get Cats</button>
<button class="btn btn-primary" @onclick="async () => animals.AddRange(await a.GetAllAync())">Get All</button>
<button class="btn btn-primary" @onclick="async () => animals.AddRange(await a.GetAnyAync())">Get Any</button>
<button class="btn btn-primary" @onclick="async () => animals.AddRange(await a.GetWithCancellationAync())">Get With Cancellation</button>
<button class="btn btn-warning" @onclick="() => a.Cancel()">Cancel</button>

<br />
<br />
<h3>Animals</h3>
<table class="table">
    <thead>
        <tr>
            <th>Id</th>
            <th>Race</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var a in animals)
        {
            <tr>
                <td>@a.Id</td>
                <td>@a.Race</td>
            </tr>
        }
    </tbody>
</table>


@code{
    List<Animal> animals = new();
}

